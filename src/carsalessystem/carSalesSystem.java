/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package carsalessystem;

import javax.swing.JOptionPane;
import javax.swing.JTextField;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JPasswordField;

/**
 *
 * @author AdhamFayrouz
 */
public class carSalesSystem extends javax.swing.JFrame {

    /**
     * Creates new form myjframe
     */
    
    static Administrator admin =new Administrator("Admin","Cairo","01221416502","Khaled@gmail.com","Khaled12345");;
    static ArrayList <Car> cars = new ArrayList();
    static ArrayList <Customer> customers = new ArrayList() ;
    
    
    static Connection db   = null;
    static Statement st    = null;
    static String sql;
    static ResultSet carLastId = null, carsData = null, carColors = null,user_data =null;
    
    public carSalesSystem() {
        initComponents();
        
        this.add(User.getLog());
        this.add(User.getReg());
        this.add(User.getView());
        this.add(Administrator.getAdd());
        this.add(Administrator.getEdit());
        
        this.setSize(915,935);
        this.setResizable(false);
        this.setLocationRelativeTo(null);
        admin.setCarlisteners(cars);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(900, 900));
        setSize(new java.awt.Dimension(900, 900));
        getContentPane().setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 0, 0));

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    
    

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        
        
        ////////   Connect to DataBase and Retrieve all data From db   /////////////////////////////        
        
        
        try{ // Connect with database and set foreign keys on
            db = DriverManager.getConnection("jdbc:sqlite:carsales.db");
            User.setConnection(db);
            st = db.createStatement();//statement excute on this db
            sql = "PRAGMA foreign_keys=ON";  // Activate foreing keys in sqlite
            st.execute(sql);
        }catch(SQLException ex){
            System.out.println(ex.getMessage());
        }
        try { // Retrieve cars data
            
            sql ="SELECT MAX(car_id) FROM cars";
            carLastId = st.executeQuery(sql);
            Car.lastId = carLastId.getInt(1);
            carLastId.close();
            sql = "SELECT * FROM cars";
            carsData = st.executeQuery(sql);
            while(carsData.next()){
                cars.add(new Car());//Cars:Arraylist
                cars.get(Car.Count - 1).setId(carsData.getInt(1));
                cars.get(Car.Count - 1).setModel_Name(carsData.getString(3));
                cars.get(Car.Count - 1).setManufactor_Type(carsData.getString(2));
                cars.get(Car.Count - 1).setYear_manufacture(carsData.getInt(4));
                cars.get(Car.Count - 1).setYear_purchase(carsData.getInt(7));
                cars.get(Car.Count - 1).setColorNumber(carsData.getInt(5));
                cars.get(Car.Count - 1).setPrice(carsData.getInt(6));
                if(carsData.getString(8)!= null)//not found pointer to fk
                {
                   cars.get(Car.Count - 1).setAvailable(false);
                   cars.get(Car.Count - 1).setBuyer(carsData.getString(8));
                }
                cars.get(Car.Count - 1).setImg(carsData.getBytes(9));
            }
            carsData.close();
            sql ="SELECT car_color FROM car_colors";
            carColors = st.executeQuery(sql);
            for(int i=0;i<Car.Count;i++){
                int colornum = cars.get(i).getColorNumber();
                String[] colors = new String[colornum];
                for(int j=0; j< colornum ;j++){
                    carColors.next();
                    colors[j] = carColors.getString("car_color");
                }
                cars.get(i).setColors(colors);
                cars.get(i).setCard();
            }
            carColors.close();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
        }
        try{ // retrieve customers data
            sql = "SELECT * FROM customers";
            user_data = st.executeQuery(sql);
            
            while(user_data.next()){
                customers.add(new Customer());
                customers.get(Customer.count - 1).setPhoneNumber(carsData.getString(4));//follow Arraylist ,not found Reg
                customers.get(Customer.count - 1).setEmail(carsData.getString(1));
                customers.get(Customer.count - 1).setPassword(carsData.getString(2));
                customers.get(Customer.count - 1).setName(carsData.getString(3));
                customers.get(Customer.count - 1).setAddress(carsData.getString(5));
            }
            user_data.close();
        }catch(SQLException ex){
            System.out.println(ex.getMessage());
        }
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        
//////////////////////////////////////////////////// JFrame && Action Listeners //////////////////////////////////////////        
        carSalesSystem app = new carSalesSystem();
        app.setTitle("Mallaki Online");
        app.setVisible(true);
    
      User.getReg().regButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                if(Customer.regFormIsCorrect(customers)){
                    Customer.Registeration(customers);
                    JOptionPane.showMessageDialog(app,"Successfully registered");
                    User.showLoginPage();
                    }
                }
        });
        User.getReg().backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                User.showLoginPage();
            }
        });
      User.getLog().logButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boolean find=false;
                String email , password ;
                JTextField emailfield = User.getLog().getEmailField();
                JPasswordField passfield = User.getLog().getPassField();
                email = emailfield.getText();
                password = passfield.getText();
                if(User.loginFormIsCorrect()){
                    
                    if (email.equals(admin.getEmail()) && password.equals(admin.getPassword())){
                    find = true;
                    JOptionPane.showMessageDialog(User.getLog(),"Welcome "+admin.getName());
                    User.currentUser = admin;
                    admin.showAccount();
                    admin.viewCars(cars);
                    User.getLog().clearForm();
                    }
                    else{
                        for(int i=0;i<Customer.count;i++){
                            if(email.equals(customers.get(i).getEmail())&&password.equals(customers.get(i).getPassword())){
                                find = true;
                                JOptionPane.showMessageDialog(User.getLog(),"Welcome "+customers.get(i).getName());
                                User.currentUser = customers.get(i);
                                customers.get(i).showAccount();
                                customers.get(i).viewCars(cars);
                                User.getLog().clearForm();
                                break;
                            }
                        }
                    }
                    if(!find){
                        JOptionPane.showMessageDialog(User.getLog(),"Email doesn't exist or wrong password","Alert",JOptionPane.WARNING_MESSAGE);
                    }
                }
            }
        });
      User.getLog().regButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                User.showRegPage();
            }
        });
      User.getView().logoutButton.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                int choice = JOptionPane.showConfirmDialog(app,"Are you sure you want to log out ?");
                if(choice == JOptionPane.YES_OPTION){
                    User.showLoginPage();
                    User.getView().clearForm();
                } 
            }
        });
        User.getView().searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                if(User.currentUser.getClass().getName().equals("carsalessystem.Administrator")){
                    ((Administrator)User.currentUser).Search(cars);
                }
                else if(User.currentUser.getClass().getName().equals("carsalessystem.Customer")){
                    ((Customer)User.currentUser).Search(cars);
                }
            }
        });
      User.getView().defaultButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                if(User.currentUser.getClass().getName().equals("carsalessystem.Administrator")){
                    ((Administrator)User.currentUser).viewCars(cars);
                }
                else if(User.currentUser.getClass().getName().equals("carsalessystem.Customer")){
                    ((Customer)User.currentUser).viewCars(cars);
                }
                User.getView().clearForm();
            }
        });
      User.getView().addCarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Administrator.showAddCarPage();
            }
        });
        Administrator.getAdd().addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                if(Administrator.addCarFormIsCorrect()){
                    JOptionPane.showMessageDialog(app,"Car added successfully");
                    admin.addCar(cars);
                    admin.showAccount();
                }
            }
        });
        Administrator.getAdd().backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Administrator.getAdd().setVisible(false);
                User.getView().setVisible(true);
                Administrator.getAdd().clearForm();
            }
        });
        Administrator.getAdd().imgButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Administrator.getAdd().browseImage();
            }
        });
        Administrator.getEdit().backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Administrator.getEdit().setVisible(false);
                User.getView().setVisible(true);
                Administrator.getEdit().clearForm();
            }
        });
        Administrator.getEdit().imgButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Administrator.getEdit().browseImage();
            }
        });
        Administrator.getEdit().editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                if(Administrator.editCarFormIsCorrect()){
                    int carIndex = Integer.parseInt(((JButton)evt.getSource()).getName());
                    JOptionPane.showMessageDialog(app,"Car has been edited");
                    admin.editCar(cars, carIndex);
                    admin.showAccount();
                }
                
            }
        });
        
        // if Application is closed, close all connections to database
        app.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                try{
                    db.close();
                    st.close();
                    carLastId.close();
                    carsData.close();
                    carColors.close();
                    user_data.close();
                }catch(SQLException ex){
                    System.out.println(ex.getMessage());
                }
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
